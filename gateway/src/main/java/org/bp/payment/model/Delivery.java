/*
 * Travel mircro service
 * Micro service to book a travel
 *
 * OpenAPI spec version: 1.0.0
 * Contact: supportm@bp.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.bp.payment.model;

import com.fasterxml.jackson.annotation.JsonProperty;

import java.util.Objects;

/**
 * Flight
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-12-06T08:44:40.322365400+01:00[Europe/Warsaw]")
public class Delivery {
  @JsonProperty("from")
  private Point from = null;

  @JsonProperty("to")
  private Point to = null;

  public Delivery from(Point from) {
    this.from = from;
    return this;
  }

   /**
   * Get from
   * @return from
  **/

  public Point getFrom() {
    return from;
  }

  public void setFrom(Point from) {
    this.from = from;
  }

  public Delivery to(Point to) {
    this.to = to;
    return this;
  }

   /**
   * Get to
   * @return to
  **/

  public Point getTo() {
    return to;
  }

  public void setTo(Point to) {
    this.to = to;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Delivery flight = (Delivery) o;
    return Objects.equals(this.from, flight.from) &&
        Objects.equals(this.to, flight.to);
  }

  @Override
  public int hashCode() {
    return Objects.hash(from, to);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Delivery {\n");
    
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
